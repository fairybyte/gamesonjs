!function(t){var e={};function i(s){if(e[s])return e[s].exports;var h=e[s]={i:s,l:!1,exports:{}};return t[s].call(h.exports,h,h.exports,i),h.l=!0,h.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var h in t)i.d(s,h,function(e){return t[e]}.bind(null,h));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);class s{constructor({element:t,width:e,height:i}){this.element=t,this.canvas=document.createElement("canvas"),this.canvas.width=e,this.canvas.height=i,this.element.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.canvas.style.cssText="border: 1px solid #f2f2f2"}rect(t,e,i,s,h){this.ctx.fillStyle=h,this.ctx.fillRect(t,e,i,s)}circle(t,e,i,s){this.ctx.beginPath(),this.ctx.fillStyle=s,this.ctx.arc(t,e,i,0,2*Math.PI,!1),this.ctx.fill()}text(t,e,i,s,h){this.ctx.fillStyle=s,this.ctx.font=`Bold ${h}px Arial`,this.ctx.textBaseline="top",this.ctx.textAlign="center",this.ctx.fillText(t,e,i)}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}}class h{constructor({element:t,width:e,height:i}){this.element=t,this.renderElem=document.createElement("div"),this.renderElem.style.cssText=`\n      width: ${e}px;\n      height: ${i}px;\n      overflow: hidden;\n      border: 1px solid #f2f2f2;\n    `,this.element.appendChild(this.renderElem)}rect(t,e,i,s,h){const r=document.createElement("div");r.style.cssText=`\n      position:absolute;\n      top: ${e}px;\n      left: ${t}px;\n      width: ${i}px;\n      height: ${s}px;\n      background: ${h};\n    `,this.renderElem.appendChild(r)}circle(t,e,i,s){const h=document.createElement("div");h.style.cssText=`\n      position:relative;\n      top: ${e}px;\n      left: ${t}px;\n      width:${2*i}px;\n      height:${2*i}px;\n      background: ${s};\n      border-radius:${i}px;\n      `,this.renderElem.appendChild(h)}text(t,e,i,s,h){const r=document.createElement("div");r.style.cssText=`\n      position: absolute;\n      top: ${i}px;\n      left: ${e}px;\n      color: ${s};\n      font: Bold ${h}px Arial;\n      text-align: center;\n    `,r.textContent=t,this.renderElem.appendChild(r)}clear(){this.renderElem.firstElementChild&&(this.renderElem.innerHTML="")}}window.Game=class{constructor({element:t,width:e,height:i,render:r}){const l={element:t,width:e,height:i};this.width=e,this.height=i,this.renderMethod="canvas"===r?new s(l):new h(l),this.inputMap=[],this.ball={x:0,y:0,r:5,color:"white",vx:3,vy:0,maxV:3},this.players={0:{x:0,y:150,color:"white",score:0,direction:"none"},1:{x:0,y:150,color:"white",score:0,direction:"none"},speed:10,height:100,width:10}}input(){const t=t=>{this.inputMap[t.keyCode]="keydown"===t.type};document.addEventListener("keydown",t),document.addEventListener("keyup",t)}init(){this.input(),this.startGame(),this.frame()}frame(){this.renderMethod.clear(),this.update(),this.render(),window.requestAnimationFrame(()=>this.frame())}render(){this.renderMethod.circle(this.ball.x,this.ball.y,this.ball.r,this.ball.color),this.renderMethod.rect(this.players[0].x,this.players[0].y,this.players.width,this.players.height,this.players[0].color),this.renderMethod.rect(this.players[1].x,this.players[1].y,this.players.width,this.players.height,this.players[1].color),this.renderMethod.text(`${this.players[0].score} : ${this.players[1].score}`,this.width/2,10,"white",28)}update(){if(this.inputMap[87]?(this.players[0].y=Math.max(this.players[0].y-this.players.speed,0),this.players[0].direction="up"):this.inputMap[83]?(this.players[0].y=Math.min(this.players[0].y+this.players.speed,this.height-this.players.height),this.players[0].direction="down"):this.players[0].direction="none",this.inputMap[38]?(this.players[1].y=Math.max(this.players[1].y-this.players.speed,0),this.players[1].direction="up"):this.inputMap[40]?(this.players[1].y=Math.min(this.players[1].y+this.players.speed,this.height-this.players.height),this.players[1].direction="down"):this.players[1].direction="none",this.collision(this.ball,this.players[1])||this.collision(this.ball,this.players[0])){const t=this.ball.vx>0?this.players[1]:this.players[0];"up"==t.direction?this.ball.vy=-5:"down"==t.direction?this.ball.vy=5:this.ball.vy=0,this.ball.vx*=-1}this.ball.x>=this.width?(this.players[0].score++,this.startGame()):this.ball.x<0&&(this.players[1].score++,this.startGame()),(this.ball.y>=this.height||this.ball.y<=0)&&(this.ball.vy*=-1),this.ball.x+=this.ball.vx,this.ball.y+=this.ball.vy}collision(t,e){const i=this.players.height;return t.x==e.x&&t.y>=e.y&&t.y<=e.y+i}startGame(){this.ball.y=this.height/2,this.ball.x=Math.floor(this.width/2),this.ball.vy=0,this.ball.vx=[-5,5][Math.floor(2*Math.random())],this.players[0].x=0,this.players[0].y=this.width/2-this.players.height,this.players[1].x=this.width-10,this.players[1].y=this.width/2-this.players.height}}}]);