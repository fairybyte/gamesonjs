!function(e){var t={};function i(s){if(t[s])return t[s].exports;var l=t[s]={i:s,l:!1,exports:{}};return e[s].call(l.exports,l,l.exports,i),l.l=!0,l.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)i.d(s,l,function(t){return e[t]}.bind(null,l));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);class s{constructor({element:e,elementTable:t,width:i,height:s,cell:l}){this.element=e,this.tableElem=t,this.cell=l,this.width=i,this.height=s,this.renderField=[],this._createMapDOM(),this._createDOMTable()}_createMapDOM(){for(let e=0;e<this.height;e++){const e=[];for(let t=0;t<this.width;t++){const t=document.createElement("div");t.style.cssText=`\n          width: ${this.cell.w}px;\n          height: ${this.cell.h}px;\n        `,e.push(t),this.element.appendChild(t)}this.renderField.push(e)}this.element.style.cssText=`\n      display: flex;\n      flex-flow: row wrap;\n\n      width: ${this.cell.w*this.width}px;\n      border: 1px solid black;\n    `}_drawDOM(e){for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length;i++){e[t][i];e[t][i]&&this._renderCell(t,i,e[t][i])}}_clearDOM(e){for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length;i++)e[t][i]||(this.renderField[t][i].style.background=null),e[t][i]||(this.renderField[t][i].style.outline=null)}_renderCell(e,t,i){switch(i){case 1:this.renderField[e][t].style.background="#008cff";break;case 2:this.renderField[e][t].style.background="#4400ff";break;case 3:this.renderField[e][t].style.background="#ff8800";break;case 4:this.renderField[e][t].style.background="#ffd900";break;case 5:this.renderField[e][t].style.background="#51ff00";break;case 6:this.renderField[e][t].style.background="#b700ff";break;case 7:this.renderField[e][t].style.background="#ff0037"}this.renderField[e][t].style.outline=this.cell.border+"px solid black"}render(e){this._drawDOM(e),this._clearDOM(e)}_createDOMTable(){this.tableElem.insertAdjacentHTML("afterbegin","\n          <p>Score: <span>0</span></p>\n          <p>Lines: <span>0</span></p>\n          <p>Level: <span>0</span></p>"),this.tableElem.style.cssText="\n      position:relative;\n      color: #fff;\n      font-size: 16px;\n      text-aligin: center;\n      border: 1px solid black;\n      margin-left: 20px;\n    "}renderTable(e){const t=this.tableElem.querySelectorAll("p span");t[0].textContent=e.score,t[1].textContent=e.lines,t[2].textContent=e.level}}class l{constructor({element:e,elementTable:t,width:i,height:s,cell:l}){this.elem=e,this.tableElem=t,this.cell=l,this.canvas=document.createElement("canvas"),this.canvas.width=this.cell.w*i,this.canvas.height=this.cell.h*s,this.context=this.canvas.getContext("2d"),this.elem.style.cssText=`\n      display: flex;\n      flex-flow: row wrap;\n      width: ${this.canvas.width}px;\n      border: 1px solid black;\n    `,this.elem.appendChild(this.canvas),this._createDOMTable()}render(e){this._clear(),this._draw(e)}_draw(e){for(let t=0;t<e.length;t++)for(let i=0;i<e[0].length;i++)e[t][i]&&this._renderCell(i*this.cell.w,t*this.cell.h,this.cell.w,this.cell.h,e[t][i])}_clear(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}_renderCell(e,t,i,s,l){switch(l){case 1:this.context.fillStyle="#008cff";break;case 2:this.context.fillStyle="#4400ff";break;case 3:this.context.fillStyle="#ff8800";break;case 4:this.context.fillStyle="#ffd900";break;case 5:this.context.fillStyle="#51ff00";break;case 6:this.context.fillStyle="#b700ff";break;case 7:this.context.fillStyle="#ff0037"}this.context.strokeStyle="black",this.context.lineWidth=2,this.context.fillRect(e,t,i,s),this.context.strokeRect(e,t,i,s)}_createDOMTable(){this.tableElem.insertAdjacentHTML("afterbegin","\n          <p>Score: <span>0</span></p>\n          <p>Lines: <span>0</span></p>\n          <p>Level: <span>0</span></p>"),this.tableElem.style.cssText="\n      position:relative;\n      color: #fff;\n      font-size: 16px;\n      text-aligin: center;\n      border: 1px solid black;\n      margin-left: 20px;\n    "}renderTable(e){const t=this.tableElem.querySelectorAll("p span");t[0].textContent=e.score,t[1].textContent=e.lines,t[2].textContent=e.level}}const n=new class{constructor({elem:e=null,elemTable:t=null,render:i="canvas",cell:n={w:25,h:25,border:2}}){this.fieldOptions={w:10,h:20},this.params={element:e,elementTable:t,width:this.fieldOptions.w,height:this.fieldOptions.h,cell:n},"dom"==i.toLowerCase()?this.renderMethod=new s(this.params):"canvas"==i.toLowerCase()&&(this.renderMethod=new l(this.params)),this.config={fps:60,slow:20},this.time={now:0,last:window.performance.now(),dt:0},this.gameStats={level:0,score:0,lines:0,higherPiece:20,point:{1:40,2:100,3:300,4:1200}},this.playfield=[],this.emptyLine=[0,0,0,0,0,0,0,0,0,0],this.pieces={I:[[1],[1],[1],[1]],J:[[0,2],[0,2],[2,2]],L:[[3,0],[3,0],[3,3]],O:[[4,4],[4,4]],T:[[0,5,0],[5,5,5]],Z:[[6,6,0],[0,6,6]],S:[[0,7,7],[7,7,0]]},this.currentPiece={x:0,y:0,color:"",map:[]}}input(){document.addEventListener("keydown",e=>{switch(e.keyCode){case 37:this.movePiece().left();break;case 38:this.rotatePiece();break;case 39:this.movePiece().right();break;case 40:this.movePiece().down()}})}init(){this.input(),this.startGame(),this.frame(),console.log("Let's Play!")}frame(){this.time.now=window.performance.now(),this.time.dt=this.time.dt+Math.min(1,(this.time.now-this.time.last)/1e3);const e=1/this.config.fps,t=this.config.slow*e;for(;this.time.dt>e;)this.time.dt=this.time.dt-t,this.update();this.renderMethod.render(this.exportRenderData()),this.time.last=this.time.now,requestAnimationFrame(()=>this.frame())}update(){this.movePiece().down()}exportRenderData(){const e=[];for(let t=0;t<this.playfield.length;t++){const i=[];for(let e=0;e<this.playfield[t].length;e++)i[e]=this.playfield[t][e];e.push(i)}const{x:t,y:i,map:s,color:l}=this.currentPiece;for(let l=0;l<s.length;l++)for(let n=0;n<s[l].length;n++){s[l][n];0!=s[l][n]&&(e[l+i][n+t]=s[l][n])}return e}nextPiece(){const e=Object.keys(this.pieces),t=e[Math.floor(Math.random()*e.length)];this.currentPiece.x=Math.floor(this.fieldOptions.w/2-1),this.currentPiece.y=0,this.currentPiece.map=this.pieces[t]}rotatePiece(){const{x:e,y:t,map:i}=this.currentPiece,s=[];for(let e=0;e<i[0].length;e++){const t=[];for(let s=i.length-1;s>=0;s--)t.push(i[s][e]);s.push(t)}s[0].length+e>this.fieldOptions.w&&(this.currentPiece.x-=i.length-1),this.currentPiece.map=s}movePiece(){const e=this.currentPiece;return{down:()=>{if(e.y++,this.isCollision()){if(this.gameStats.higherPiece<=0)return void this.startGame();e.y--,this.gameStats.higherPiece=e.y<this.gameStats.higherPiece?e.y:this.gameStats.higherPiece,this.addPiece();const t=this.clearLine();this.updateScore(t),this.nextPiece()}},left:()=>{e.x--,this.isCollision()&&e.x++},right:()=>{e.x++,this.isCollision()&&e.x--}}}isCollision(){const e=this.currentPiece;for(let t=0;t<e.map.length;t++)for(let i=0;i<e.map[t].length;i++)if(e.map[t][i]&&(void 0===this.playfield[t+e.y]||void 0===this.playfield[t+e.y][i+e.x]||this.playfield[e.y+t][e.x+i]))return!0;return!1}addPiece(){const{x:e,y:t,map:i}=this.currentPiece;for(let s=0;s<i.length;s++)for(let l=0;l<i[s].length;l++)i[s][l]&&(this.playfield[s+t][l+e]=i[s][l])}createPlayfield(){for(let e=0;e<this.fieldOptions.h;e++){const e=[];for(let t=0;t<this.fieldOptions.w;t++)e.push(0);this.playfield.push(e)}}clearLine(){const e=[];for(let t=this.gameStats.higherPiece;t<this.playfield.length;t++){let i=!0;for(let e=0;e<this.playfield[t].length;e++)if(0===this.playfield[t][e]){i=!1;break}i&&(e.push(t),this.higherPiece--)}for(let t of e)this.playfield.splice(t,1),this.playfield.unshift(this.emptyLine);return e.length}updateScore(e){e>0&&(this.gameStats.score+=this.gameStats.point[e]*(this.gameStats.level+1),this.gameStats.lines+=e,this.gameStats.level=Math.floor(.1*this.gameStats.lines),console.log(this.gameStats.score,this.gameStats.lines,this.gameStats.level),this.exportScoreData())}startGame(){this.playfield=[],this.gameStats.level=0,this.gameStats.lines=0,this.gameStats.score=0,this.gameStats.higherPiece=this.fieldOptions.h,this.createPlayfield(),this.exportScoreData(),this.nextPiece()}exportScoreData(){this.renderMethod.renderTable(this.gameStats)}}({elem:document.querySelector(".field"),elemTable:document.querySelector(".table"),render:"dom"});window.tetris=n,n.init()}]);